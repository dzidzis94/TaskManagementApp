@model TaskManagementApp.Models.Project

@{
    ViewData["Title"] = "Project Details";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h1 class="text-white">@Model.Name</h1>
            <p class="text-white-50">@Model.Description</p>
        </div>
        <div>
            <a asp-controller="Tasks" asp-action="Create" asp-route-projectId="@Model.Id" class="btn btn-success">
                <i class="fas fa-plus"></i> Add New Task
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Projects
            </a>
        </div>
    </div>
    <hr class="border-light" />

    <h3 class="text-white mt-4">Tasks in this Project</h3>

    @if (Model.Tasks != null && Model.Tasks.Any())
    {
        <div id="task-list">
            @* We will render the tasks here. Let's use a partial view for the task list. *@
            @await Html.PartialAsync("_TaskList", Model.Tasks.Where(t => t.ParentTaskId == null).ToList())
        </div>
    }
    else
    {
        <div class="card bg-dark-glass mt-3">
            <div class="card-body text-center">
                <p class="text-white-50">No tasks have been created for this project yet.</p>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Add any project-specific javascript here if needed in the future.
    </script>
}